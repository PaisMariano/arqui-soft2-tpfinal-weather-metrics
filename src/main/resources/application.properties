spring.application.name=apiconnector
server.port=8081

# Import application-secret
spring.config.import=optional:classpath:application-secret.properties

# Configuracion de Logging
logging.level.root=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Loki Configuration
loki.url=http://localhost:3100/loki/api/v1/push
management.metrics.tags.application=${spring.application.name}

# Logging patterns
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Springboot Actuator /actuator/health
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always

# Resilience4j Circuit Breaker and retry
resilience4j.circuitbreaker.instances.weatherService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.weatherService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.weatherService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.weatherService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.weatherService.waitDurationInOpenState=10s

# MongoDB Configuration
spring.data.mongodb.uri=mongodb+srv://paismarianoa:pxgwowyIg0QPA3YD@cluster0.cq1hpjy.mongodb.net/weather_records?retryWrites=true&w=majority&appName=Cluster0

# Cache Configuration
app.cache.ttl.minutes=10

# Retry Configuration
resilience4j.retry.instances.weatherService.maxAttempts=3
resilience4j.retry.instances.weatherService.waitDuration=1s

# Bulkhead Configuration
resilience4j.bulkhead.instances.weatherService.maxConcurrentCalls=10
resilience4j.bulkhead.instances.weatherService.maxWaitDuration=0
